#!/usr/bin/bash

#
set -euo pipefail


#####
# Action before deploying the program 
#####


# Declaration variables
#
getOS=""

meoTmpDir="/tmp/$USER/.meo/github"

meoInfoDir="/usr/lib/meo/library/info"
meoListAvailablePkgsPure="/usr/lib/meo/library/info/list-available-packages-pure"
meoListAvailablePkgs="/usr/lib/meo/library/info/list-available-packages"
meoListInstalledPkgsPure="/usr/lib/meo/library/info/list-installed-packages-pure"

getCurrentFileVersionPkgs="current-version-pkgs"
getURL="https://github.com/baldeuniversel/linux.git"



#
if [[ ! -e "$meoInfoDir" ]]
then
    #
    mkdir -p "$meoInfoDir" 2> /dev/null

    if [[ $? -ne 0 ]]
    then
        echo "~"
        echo -e "Something is wrong, make sure you have the right to install packages \U001F6A8 "

        exit 1
    fi
fi

#
if [[ -e "$meoListInstalledPkgsPure" ]]
then
    #
    sed -i "/meo/d" "$meoListInstalledPkgsPure" 2> /dev/null
fi



### Action on the directory `/tmp` and ... -> start  tag[0]
if [[ ! ( -e "/tmp" ) ]]
then

    mkdir -p /tmp 2> /dev/null
    chmod 777 /tmp 2> /dev/null

    # Check the return value of the last command <<mkdir>>
    if [[ $? -ne 0 ]]
    then
        echo "~"
        echo "This program is not compatible with your system ."
        exit 1
    fi

    # Get kernel
    getOS=` uname --operating-system `

    #
    if [[ $getOS != "GNU/Linux" ]]
    then
        echo "~"
        echo "This program is not compatible with your system ."
        exit 1
    fi

fi

### Action on the directory `/tmp` and ... -> end tag[0]




### Download the available packages file and store the name of these packages with their 
### version and hash -> start tag[d0]

#
if [[ ! ( -e "$meoTmpDir" ) ]]
then
    #
    mkdir -p "$meoTmpDir" 2> /dev/null
else
    #
    rm -r "$meoTmpDir"

    #
    mkdir -p "$meoTmpDir" 2> /dev/null
fi


# Check if there is internet connection
curl ifconfig.me &> /dev/null
#
if [[ $? -ne 0 ]]
then
    echo "~"
    echo -e "Your internet connection seems not to be established \U001F30D"
    exit 1
fi

# Clone the git repository
git clone --branch "$getCurrentFileVersionPkgs" --single-branch --depth 1 "$getURL" "$meoTmpDir/linux" 2> /dev/null



#
if [[ $? -eq 0 ]]
then
    
    # Action to save in another files the content of the file that contents the available packages
    find "$meoTmpDir/linux"  -name "current-version-pkgs" -type f -exec \
        cat {} \; | grep -A 2 "package" | awk '{ gsub(/^[[:space:]]*|,|--/, "");  print }' > $meoListAvailablePkgsPure

    #
    find "$meoTmpDir/linux"  -name "current-version-pkgs" -type f -exec \
        cat {} \; | grep -A 2 "package" | awk '{ gsub(/^[[:space:]]*|,|--/, ""); print }' | \
        awk -F ": " 'length($0) > 3 && NF > 0 {printf "\033[1;036m%s\033[0m: \033[1;32m%s\033[0m\n", $1, $2}; \
        length($0) < 3 && NF <= 0 {print}' > $meoListAvailablePkgs
fi

# Remove `.meo` directory in /tmp
if [[ -e "$meoTmpDir"  ]]
then
    rm -rf "$meoTmpDir" 2> /dev/null
fi

### Download the available packages file and store the name of these packages with their 
### version and hash -> end tag[d0]
