#!/usr/bin/zsh

#####
##### 
# `vimizer` program allows to install and configure vim and zsh program .
##### 
#####

set -o pipefail 





### Manager input parameters -> start tag[m0]

if [[ $# -eq 1 ]] && [[ $1 == "--help" ]]
then

    #
    if [[ -e "/usr/lib/vimizer/documentation/info/vimizer-help" ]]
    then
        #
        cat "/usr/lib/vimizer/documentation/info/vimizer-help" 2> /dev/null

        exit 0
    fi

elif [[ $# -eq 1 ]] && [[ $1 == "--version" ]]
then

    #
    if [[ -e "/usr/lib/vimizer/documentation/info/vimizer-version-pure" ]]
    then
        #
        cat "/usr/lib/vimizer/documentation/info/vimizer-version-pure" 2> /dev/null

        exit 0
    fi
fi

# 
if [[ $# -gt 0 ]]
then
    echo ""
    echo -e "No input parameter is required except( --version, --help ) \U001F917"
    echo ""

    exit 1
fi

### Manager input parameters -> end tag[m0]





# To see if the `zsh` and `vim` are installed and ...
if [[ ` whereis zsh | grep "\/usr\/bin\/zsh\|\/bin\/zsh" ` ]] && [[ ` whereis vim | grep "\/usr\/bin\/vim\|\/bin\/vim" ` ]]
then

    # Creation of temporary dir
    if [[ ! ( -e "/tmp/.vimizer/$USER" ) ]]
    then

        #
         mkdir -p  "/tmp/.vimizer/$USER" &> /dev/null

         chmod 700 "/tmp/.vimizer/$USER" 2> /dev/null

        # 
        if [[ $? -ne 0 ]]
        then
            echo -e "Something is wrong, make sure you have the rights to write in "
            echo -e "the [ /tmp ] directory  ⚠️  "
            echo ""

            exit 1
        fi
    fi

   
    echo ""
    echo "~"
    echo -e "Let's go \U0026A1 "
    echo ""
else
    echo ""
    echo "~"
    echo -e "Please install \e[32;1mvim\e[0m and \e[32;1mzsh\e[0m program "
    echo ""

    exit 1
fi





# Declaration variables
username=$USER
counter=0
getHomeDirUsername=""
tmpDirCurrentUser="/tmp/.vimizer/$USER"
flagShellChanged="true"
flagCurrentShellZSh="true"
userAsk=""
counterRetypePasswd=0



### Treatment on the user  -> start tag[d0]

# Get the home directory of the user
if [[ -e "/etc/passwd" ]]
then

    #
    if [[ $( cat /etc/passwd | cut -d ":" -f1 | grep "$username" ) ]]
    then
        getHomeDirUsername=$( cat /etc/passwd | grep "^$username" | cut -d ":" -f6 ) 
    fi
fi

### Treatment on the user  -> end tag[d0]





### Deployment files/dirs  -> start tag[a0]

# Creation of the `.zshrc` file
if [[ ! ( -e  "$getHomeDirUsername/.zshrc" ) ]]
then
    touch  "$getHomeDirUsername/.zshrc"
fi

# Creation the directories where the fonts will be sent
if [[ ! ( -e "$getHomeDirUsername/.local/share/fonts" ) ]]
then
    mkdir -p "$getHomeDirUsername/.local/share/fonts" 2> /dev/null
fi



# Copy of fonts
if [[ -e "$getHomeDirUsername/.local/share/fonts" ]]
then

    #
    if [[ -e "/usr/lib/vimizer/library/depends/vimizer-fonts" ]]
    then

        #
        cp -ra "/usr/lib/vimizer/library/depends/vimizer-fonts" "$getHomeDirUsername/.local/share/fonts"  2> /dev/null

        # 
        if [[ $? -ne 0 ]]
        then
            echo -e "Something is wrong, make sure you have the rights to write in "
            echo -e "your home directory  ⚠️  "
            echo ""

            exit 1
        fi
    else
        echo ""
        echo "~"
        echo -e "Missing files/dirs, please reinstall the \e[32;1mvimizer\e[0m program \U001F9D0 "
        echo ""

        exit 1
    fi
fi



# Update the `.vim` directory and `.vimrc` file ...
if [[ -e "/usr/lib/vimizer/library/depends/vim" ]]
then

    local vimrcFile="/usr/lib/vimizer/library/depends/vim/vimrc"
    
    #
    if [[ -e "$getHomeDirUsername/.vimrc" ]]
    then
        
        # Append the content of the `vimrc` file to the `.vimrc` file of the user
        while IFS= read -r lineFile 
        do
	        if [[ !  $( grep  "$lineFile" "$getHomeDirUsername/.vimrc" &> /dev/null ) ]]
            then
                echo "$lineFile" >> "$tmpDirCurrentUser/new-content-vimrc"
            fi

        done < $vimrcFile
        
        # If there is a new content, add them to the `.vimrc` of the user
        if [[ -s "$tmpDirCurrentUser/new-content-vimrc" ]]
        then

            # Backup `.vimrc` file of the user (secure reasons)
            mv --  "$getHomeDirUsername/.vimrc"  "$getHomeDirUsername/.backup-vimrc" 2> /dev/null

	        # Append ... 
            cat "$tmpDirCurrentUser/new-content-vimrc" >>  "$getHomeDirUsername/.vimrc"  
        fi

    else
	    cp -ar "$vimrcFile"  "$getHomeDirUsername/.vimrc"
    fi
    
    # Copy of plugins 
    if [[ -e "$getHomeDirUsername/.vim" ]]
    then
        
        #
        if [[  ! ` diff -r "/usr/lib/vimizer/library/depends/vim/vim"  "$getHomeDirUsername/.vim" &> /dev/null ` ]]
        then
            cp -ar "/usr/lib/vimizer/library/depends/vim/vim"  "$getHomeDirUsername/.vim" 2> /dev/null
        fi

    else
        #
        cp -ar "/usr/lib/vimizer/library/depends/vim/vim"  "$getHomeDirUsername/.vim" 2> /dev/null
    fi

else

    echo ""
    echo "~"
    echo -e "Missing files/dirs, please reinstall the \e[32;1mvimizer\e[0m program \U001F9D0 "
    echo ""

    exit 1
fi

# Update the `.zshrc` file ...
if [[ -e "/usr/lib/vimizer/library/depends/zsh" ]]
then
    
    local zshrcFile="/usr/lib/vimizer/library/depends/zsh/zshrc"



    #
    if [[ ! ( -e "$getHomeDirUsername/.zshrc" )  ]]
    then
        touch "$getHomeDirUsername/.zshrc" 2> /dev/null
        
        #
        if [[ $? -ne 0 ]]
        then
            echo -e "Something is wrong, make sure you have the rights to write in "
            echo -e "your home directory  ⚠️  "
            echo ""

            exit 1
        fi
    fi

    #
    while IFS= read -r lineFile 
    do
        if [[ ! $( grep  "$lineFile" "$getHomeDirUsername/.zshrc" &> /dev/null ) ]]
        then
            echo "$lineFile" >> "$tmpDirCurrentUser/new-content-zshrc"
        fi
    done < $zshrcFile

    #
    if [[ -s "$tmpDirCurrentUser/new-content-zshrc" ]]
    then
        #
        mv --  "$getHomeDirUsername/.zshrc"  "$getHomeDirUsername/.backup-zshrc" 

	    #
        cat "$tmpDirCurrentUser/new-content-zshrc"  2> /dev/null >>  "$getHomeDirUsername/.zshrc"  
    fi

else
    echo ""
    echo "~"
    echo -e "Missing files/dirs, please reinstall the \e[32;1mvimizer\e[0m program \U001F9D0 "
    echo ""

    exit 1
fi

### Deployment files/dirs  -> end tag[a0]





### Deployment plugins -> start tag[p0]

echo ""
echo ""
echo "Wait ..."
sleep 3

vim +PlugInstall +qall

# Clear the screen
clear

### Deployment plugins -> end tag[p0]





# Remove the temporary directory
rm -fr $tmpDirCurrentUser 2> /dev/null





### Change of shell -> start tag[c0]
#
if [[ ! ` echo "$SHELL" | grep -- "zsh" ` ]]
then

    #
    flagCurrentShellZSh="false"


    
    #
    while [[ $counterRetypePasswd < 3 ]]
    do
        # Declaration variables
        local passwdUser=""
    
    
    
        #
        if [[ $counterRetypePasswd -gt 0 ]]
        then
            echo ""
            echo -e "Wrong password \U001F9D0 "
        fi
        
        #
        echo ""
        echo "~"
        echo -en "Enter your password, then valid to change the shell : "
        read -s passwdUser
    
        echo ""
        echo ""
        echo "Wait ..."
    
        chsh --shell /usr/bin/zsh  $username <<< $passwdUser  &> /dev/null
    
        #
        if [[ $? -eq 0 ]]
        then
            echo ""
            echo "~"
            echo -e "Hashed passwords match \U002705"
    
            #
            sleep 3
    
            #
            break 
        fi
    
        #
        counterRetypePasswd=$(( counterRetypePasswd + 1 ))
    
    done
fi

# Verify if the shell has been changed 
if [[ $counterRetypePasswd -eq 3 ]]
then
    echo ""
    echo "~"
    echo -ne "The shell has not been changed, do you want to continue the process [y/n] : "
    read userAsk 

    echo ""

    if [[ $userAsk != "y" ]] && [[ $userAsk != "yes" ]]
    then
        echo ""
        echo "~"
        echo -e "The process was interrupted \U001F50C, however \e[32;1mvim\e[0m and \e[32;1mzsh\e[0m configurations have "
        echo -e "been done "
        echo ""

        exit 1
    fi

    #
    flagShellChanged="false"
    userAsk=""
fi

### Change of shell -> end tag[c0]





# Update of fonts
fc-cache -vf 

#
if [[ $? -eq 0 ]] && [[ $counterRetypePasswd < 3 ]]
then
    echo ""
    echo "~"
    echo -e "Vimizing successfully \U002705 "
    echo ""
   
    if [[ $flagCurrentShellZSh == "false" ]]
    then
        
        #
        echo "~"
        echo "Please restart your session for the change shell to take effect "
        echo ""
        echo -ne "Do you want to restart your session [y/n] : "
        read userAsk
    
        echo ""
    
        if [[ $userAsk == "yes" ]] || [[ $userAsk == "y" ]]
        then
            gnome-session-quit --no-prompt
    
            if [[ $? -ne 0 ]]
            then
                echo ""
                echo "~"
                echo "Do it manually"
                echo ""
                exit 1
            fi
        fi
    fi
    
    #
    exit 0
    
elif [[ $? -eq 0 ]] && [[ $flagShellChanged == "false" ]]
then
    echo ""
    echo "~"
    echo -e "\e[32;1mvim\e[0m and \e[32;1mzsh\e[0m configurations have been done \U002705 "

    exit 0
fi
